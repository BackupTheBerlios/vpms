Basic commands:
===============
(config) - display current configuration
(config '((N 1000) (B 1.3))) - sets two parameters in configuration leaving the rest.
(create-environment n) - create environment with "n" individuals 
(do-step n calc-avg?) - do "n" simulation steps; n - optional, default 1; calc-avg boolean - 
                        if #t turns on calculating averages
(optimize-environment) - clear genomes with no individuals attached (speeds up simulation a lot)

Results:
========
(get-state) - get current state: number of indiviuals, killed individuals
              (by mutations and Verhulst factor) and born individuals.
(get-population) - get population structure
(get-mortality) - get population mortality
(get-time) - get time of simulation (time step)
(get-config) - gets current config
(get-genome-ranking n) - get ranking of "n" most represented genomes (n=8 by default)
(get-clusters) - get current genome clusters
(get-clusters-histogram) - get current genome clusters histogram
(get-num-of-genomes &optional minage) - get number of genotypes in population.
   if optional minage argument is given - count only genomes with individuals
   above "minage" age.

Averages:
=========
Note: in order to calculate averages, one should use 'do-step' function with calc-avg? equals #t

(get-avg-population) - get average population
(get-avg-mortality)
(get-avg-genome)
(get-avg-clusters)
(get-avg-clusters-histogram)
(get-avg-times)

Other commands:
==============
(logging b) - turn on/off logging (#t/#f)
(warranty) - display warranty


Persistency:
============
(save-environment &optional file)
(restore-environment &optional file)


Examples:
=========
(print-list (get-mortality))
(get-num-of-genomes (assoc-ref (get-config) 'R)) - get num of genotypes of
individuals that reached reproduction age.
